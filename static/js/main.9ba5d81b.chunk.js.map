{"version":3,"sources":["redux/reducer.js","redux/store.js","redux/actions.js","components/ChatBox/ChatBox.jsx","components/Widget/Widget.jsx","components/MessageList/MessageList.jsx","pages/Chat.jsx","pages/Login.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["INITIAL_STATE","auth","authenticated","user","messages","commandKey","handlers","AUTHENTICATE","state","username","ADD_MESSAGE","data","type","ADD_COMMAND","key","appReducer","rest","handler","store","createStore","actionCreatorFactory","argNames","args","action","forEach","arg","index","authenticate","addMessage","addCommand","useStyles","makeStyles","box","padding","display","alignItems","width","minWidth","marginBottom","alignSelf","input","marginLeft","flex","iconButton","divider","height","margin","ChatBox","props","classes","useState","message","setMessage","enableToSubmit","length","Paper","className","InputBase","placeholder","inputProps","value","onChange","target","Divider","orientation","IconButton","onClick","onSendMessage","color","aria-label","disabled","Icon","card","maxWidth","mapWidgets","date","hashMap","0","1","2","3","4","5","6","day","setDay","dates","dateObject","Date","setDate","getDate","i","dayNumber","getDay","baseDayName","push","n","name","Box","component","mb","borderColor","Typography","map","Button","variant","lat","lng","window","innerWidth","alt","style","src","process","rate","setRate","Rating","readOnly","event","newValue","complete","setComplete","Widget","Component","ListItem","Card","CardContent","list","maxHeight","overflowY","item","borderRadius","mine","background","MessageItem","author","itemClass","join","ListItemAvatar","Avatar","ListItemText","primary","secondary","MessageList","List","command","WidgetType","widgetData","socket","root","bottom","flexDirection","Chat","isAuthenticated","useSelector","dispatch","useDispatch","useEffect","io","on","actions","setInterval","emit","Container","to","Copyright","align","Link","href","getFullYear","theme","avatar","icon","fontSize","form","header","justifyContent","title","marginTop","fontWeight","buttonProgress","green","position","top","left","wrapper","spacing","Login","setUsername","password","setPassword","loading","setLoading","isEnabledToSubmit","Grid","container","gutterBottom","TextField","required","fullWidth","id","label","autoComplete","FormControlLabel","control","Checkbox","setTimeout","buttonClassname","CircularProgress","size","mt","createMuiTheme","palette","teal","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","App","MuiThemeProvider","CssBaseline","render","location","TransitionGroup","CSSTransition","classNames","timeout","exact","path","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9ba5d81b.chunk.js","sourcesContent":["const INITIAL_STATE = {\n  auth: {\n    authenticated: false,\n    user: null,\n  },\n  messages: [],\n};\nconst authenticate = (state = INITIAL_STATE, { username: user }) => ({\n  ...state,\n  auth: { user, authenticated: true },\n});\n\nconst addMessage = (state = INITIAL_STATE, data) => ({\n  ...state,\n  messages: [...state.messages, { type: 'message', data }],\n});\nlet commandKey = 0;\nconst addCommand = (state = INITIAL_STATE, data) => {\n  commandKey += 1;\n  return {\n    ...state,\n    messages: [...state.messages, { type: 'command', data: { ...data, key: commandKey } }],\n  };\n};\nconst handlers = {\n  AUTHENTICATE: authenticate,\n  ADD_MESSAGE: addMessage,\n  ADD_COMMAND: addCommand,\n};\nconst appReducer = (state = INITIAL_STATE, { type, ...rest }) => {\n  const handler = handlers[type] || null;\n  if (handler) {\n    return handler(state, rest);\n  }\n  return state;\n};\nexport default appReducer;\n","import { createStore } from 'redux';\nimport appReducer from './reducer';\n\nconst store = createStore(appReducer);\nexport default store;\n","const actionCreatorFactory = (type, ...argNames) => (...args) => {\n  const action = { type };\n  argNames.forEach((arg, index) => {\n    action[argNames[index]] = args[index];\n  });\n  return action;\n};\nconst authenticate = actionCreatorFactory('AUTHENTICATE', 'username', 'password');\nconst addMessage = actionCreatorFactory('ADD_MESSAGE', 'author', 'message');\nconst addCommand = actionCreatorFactory('ADD_COMMAND', 'author', 'command');\n\nexport default {\n  authenticate,\n  addMessage,\n  addCommand,\n};\n","import React, { useState } from 'react';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { func } from 'prop-types';\n\nconst useStyles = makeStyles(() => ({\n  box: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n    minWidth: 300,\n    marginBottom: 10,\n    alignSelf: 'end',\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n}));\n\nconst ChatBox = (props) => {\n  const classes = useStyles();\n  const [message, setMessage] = useState('');\n  const enableToSubmit = message.length;\n  return (\n    <Paper className={classes.box}>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Write a message\"\n        inputProps={{ 'aria-label': 'search google maps' }}\n        value={message}\n        onChange={({ target: { value } }) => setMessage(value)}\n      />\n      <Divider className={classes.divider} orientation=\"vertical\" />\n      <IconButton\n        onClick={() => {\n          props.onSendMessage(message);\n          setMessage('');\n        }}\n        color=\"primary\"\n        aria-label=\"directions\"\n        disabled={!enableToSubmit}\n      >\n        <Icon>send</Icon>\n      </IconButton>\n    </Paper>\n  );\n};\nChatBox.propTypes = {\n  onSendMessage: func.isRequired,\n};\nexport default ChatBox;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { string, shape, number, arrayOf, oneOfType } from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Rating from '@material-ui/lab/Rating';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: '100%',\n  },\n});\n\nconst dateShape = string;\nconst rateShape = arrayOf(number);\nconst completeShape = arrayOf(string);\nconst mapShape = shape({\n  lat: number,\n  lng: number,\n});\n\nconst DateWidget = (props) => {\n  const hashMap = {\n    0: 'Sunday',\n    1: 'Monday',\n    2: 'Thuesday',\n    3: 'Wednesday',\n    4: 'Thursday',\n    5: 'Friday',\n    6: 'Saturday',\n  };\n  const [day, setDay] = useState();\n  const { data: date } = props;\n  const dates = [];\n  const dateObject = new Date(date);\n  dateObject.setDate(dateObject.getDate() - 1);\n  for (let i = 0; i < 4; i += 1) {\n    dateObject.setDate(dateObject.getDate() + 1);\n    const dayNumber = dateObject.getDay();\n    const baseDayName = hashMap[dayNumber];\n    if (dayNumber > 0 && dayNumber < 6) {\n      dates.push({ n: dayNumber, name: baseDayName, date: { ...dateObject } });\n    } else {\n      i -= dayNumber === 0 ? 1 : 2;\n    }\n  }\n  return (\n    <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n      {!day && <Typography component=\"legend\">Please choose a date: </Typography>}\n      {dates.map(({ name, n }) => (\n        <Button\n          key={n}\n          color={day === n ? 'primary' : 'default'}\n          variant=\"outlined\"\n          disabled={day ? day !== n : false}\n          onClick={() => {\n            setDay(n);\n          }}\n        >\n          {name}\n        </Button>\n      ))}\n      {day && <Typography component=\"legend\">Thanks for selecting a date. </Typography>}\n    </Box>\n  );\n};\nDateWidget.propTypes = {\n  data: dateShape.isRequired,\n};\nconst RateWidget = () => {\n  const [rate, setRate] = useState(0);\n  return (\n    <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n      {rate === 0 && <Typography component=\"legend\">Please, rate our service: </Typography>}\n      <Rating\n        name=\"simple-controlled\"\n        value={rate}\n        readOnly={rate > 0}\n        onChange={(event, newValue) => {\n          if (rate === 0) {\n            setRate(newValue);\n          }\n        }}\n      />\n      {rate > 0 && <Typography component=\"legend\">Thanks for rating!</Typography>}\n    </Box>\n  );\n};\nRateWidget.propTypes = {};\nconst CompleteWidget = () => {\n  const [complete, setComplete] = useState(null);\n  return (\n    <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n      <Typography component=\"legend\">Is your requirement complete? </Typography>\n      <Button\n        color={complete === true ? 'primary' : 'default'}\n        disabled={complete !== true && complete !== null}\n        variant=\"outlined\"\n        onClick={() => (complete === null ? setComplete(true) : () => null)}\n      >\n        Yes\n      </Button>\n      <Button\n        color={complete === false ? 'primary' : 'default'}\n        disabled={complete !== false && complete !== null}\n        variant=\"outlined\"\n        onClick={() => (complete === null ? setComplete(false) : () => null)}\n      >\n        No\n      </Button>\n    </Box>\n  );\n};\nCompleteWidget.propTypes = {};\nconst MAPS_API_KEY = process.env.REACT_APP_GOOGLE_MAPS_API_TOKEN;\n\nconst MapWidget = (props) => {\n  const {\n    data: { lat, lng },\n  } = props;\n  const width = window.innerWidth - 40;\n  return (\n    <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n      <img\n        alt=\"map\"\n        style={{ width: '100%', height: '300px' }}\n        src={`https://maps.googleapis.com/maps/api/staticmap?center=${lat},${lng}&zoom=13&size=${width}x300&key=${MAPS_API_KEY}&markers=${lat},${lng}`}\n      />\n    </Box>\n  );\n};\nMapWidget.propTypes = {\n  data: mapShape.isRequired,\n};\nconst mapWidgets = {\n  date: DateWidget,\n  map: MapWidget,\n  rate: RateWidget,\n  complete: CompleteWidget,\n};\n\nconst Widget = (props) => {\n  const { data, type } = props;\n  const Component = mapWidgets[type] || null;\n  const classes = useStyles();\n\n  return (\n    <ListItem>\n      <Card className={classes.card}>\n        <CardContent>\n          <Component data={data} />\n        </CardContent>\n      </Card>\n    </ListItem>\n  );\n};\n\nWidget.propTypes = {\n  type: string.isRequired,\n  data: oneOfType([dateShape, rateShape, completeShape, mapShape]).isRequired,\n};\n\nexport default Widget;\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { arrayOf, shape, string } from 'prop-types';\nimport Widget from '../Widget/Widget';\n\nconst useStyles = makeStyles(() => ({\n  list: {\n    width: '100%',\n    maxHeight: 'calc(100vh - 60px)',\n    overflowY: 'scroll',\n  },\n  item: {\n    borderRadius: '10px',\n    margin: '10px 0',\n  },\n  mine: {\n    background: '#00ecb15c',\n  },\n}));\nconst MessageItem = (props) => {\n  const { user, author, message, itemClass } = props;\n  return (\n    <ListItem key={user + message} className={itemClass.join(' ')}>\n      <ListItemAvatar>\n        <Avatar>{author[0]}</Avatar>\n      </ListItemAvatar>\n      <ListItemText primary={author} secondary={message} />\n    </ListItem>\n  );\n};\n\nMessageItem.propTypes = {\n  user: string.isRequired,\n  author: string.isRequired,\n  message: string.isRequired,\n  itemClass: string.isRequired,\n};\n\nconst MessageList = (props) => {\n  const { messages, user } = props;\n  const classes = useStyles();\n  return (\n    <List className={classes.list}>\n      {messages.map(({ type, data }) => {\n        if (type === 'message') {\n          const { author, message } = data;\n          const itemClass = [classes.item];\n          if (author === user) {\n            itemClass.push(classes.mine);\n          }\n          return (\n            <MessageItem\n              key={user + message}\n              user={user}\n              author={author}\n              message={message}\n              itemClass={itemClass}\n            />\n          );\n        }\n        if (type === 'command') {\n          const {\n            author,\n            command: { type: WidgetType, data: widgetData },\n            key,\n          } = data;\n          return <Widget key={key} type={WidgetType} data={widgetData} author={author} />;\n        }\n        return null;\n      })}\n    </List>\n  );\n};\n\nMessageList.propTypes = {\n  messages: arrayOf(\n    shape({\n      type: string,\n      data: shape({\n        author: string,\n        message: string,\n      }),\n    }),\n  ).isRequired,\n  user: string.isRequired,\n};\n\nexport default MessageList;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport actions from '../redux/actions';\nimport ChatBox from '../components/ChatBox/ChatBox';\nimport MessageList from '../components/MessageList/MessageList';\n\nlet socket = null;\nconst useStyles = makeStyles(() => ({\n  root: {\n    bottom: 0,\n    width: '100vw',\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column-reverse',\n  },\n}));\nconst Chat = () => {\n  const isAuthenticated = useSelector(({ auth }) => auth.authenticated);\n  const user = useSelector(({ auth }) => auth.user);\n  const messages = useSelector((state) => state.messages);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const sendMessage = (message) => {\n    socket.emit('message', { author: user, message });\n    dispatch(actions.addMessage(user, message));\n  };\n  useEffect(() => {\n    if (!socket) {\n      socket = io('https://demo-chat-server.on.ag/');\n      socket.on('message', ({ author, message }) => {\n        dispatch(actions.addMessage(author, message));\n      });\n      socket.on('command', ({ author, command }) => {\n        dispatch(actions.addCommand(author, command));\n      });\n      setInterval(() => {\n        socket.emit('command', {});\n      }, 20 * 1000);\n    }\n  });\n  return (\n    <Container className={classes.root}>\n      {!isAuthenticated && <Redirect to=\"/login\" />}\n      <ChatBox onSendMessage={sendMessage} />\n      <MessageList messages={messages} user={user} />\n    </Container>\n  );\n};\n\nChat.propTypes = {};\n\nexport default Chat;\n","import React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { green } from '@material-ui/core/colors';\nimport actions from '../redux/actions';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link href=\"https://github.com/jvas28\">Julio Vasconez</Link>\n      {new Date().getFullYear()}\n    </Typography>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    width: '90%',\n    maxWidth: '500px',\n    background: 'rgba(56, 56, 56, 0.72)',\n    margin: '0 auto',\n  },\n  avatar: {\n    width: '80px',\n    height: '80px',\n    margin: '10px auto',\n    background: 'transparent',\n  },\n  icon: {\n    fontSize: '3rem',\n    color: 'white',\n  },\n  form: {\n    padding: '0 10px',\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '20px',\n  },\n  title: {\n    marginTop: '35px',\n    fontWeight: 700,\n    fontSize: 20,\n    color: 'white',\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n}));\nconst Login = () => {\n  const isAuthenticated = useSelector(({ auth }) => auth.authenticated);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const performLogin = () => {\n    setLoading(true);\n    setTimeout(() => {\n      dispatch(actions.authenticate(username, password));\n    }, 1000);\n  };\n  const isEnabledToSubmit = username.length > 0 && password.length > 0 && !loading;\n  return (\n    <Paper className={classes.box}>\n      <Grid container className={classes.header}>\n        <ForumIcon className={classes.icon} />\n        <Typography variant=\"h4\" className={classes.title} color=\"textSecondary\" gutterBottom>\n          {\"Let's chat!\"}\n        </Typography>\n      </Grid>\n      {isAuthenticated && <Redirect to=\"/chat\" />}\n      <Divider />\n      <div className={classes.form}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"username\"\n          label=\"Username\"\n          name=\"username\"\n          value={username}\n          onChange={({ target: { value } }) => setUsername(value)}\n          autoComplete=\"email\"\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={password}\n          onChange={({ target: { value } }) => setPassword(value)}\n          id=\"password\"\n          autoComplete=\"new-password\"\n        />\n        <FormControlLabel\n          control={<Checkbox value=\"remember\" color=\"primary\" />}\n          label=\"Remember me\"\n        />\n        <div className={classes.wrapper}>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            onClick={performLogin}\n            disabled={!isEnabledToSubmit}\n            color=\"primary\"\n            className={classes.buttonClassname}\n          >\n            Sign In\n          </Button>\n          {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n        </div>\n\n        <Box mt={5}>\n          <Copyright />\n        </Box>\n      </div>\n    </Paper>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport teal from '@material-ui/core/colors/teal';\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { Login, Chat } from './pages';\nimport './App.scss';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: teal,\n  },\n});\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100vh',\n    backgroundImage: 'url(/res/img/bg-lights.jpeg)',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n  },\n}));\nfunction App() {\n  const classes = useStyles();\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Grid container component=\"main\" className={classes.root}>\n        <Provider store={store}>\n          <Router>\n            <Route\n              render={({ location }) => (\n                <TransitionGroup>\n                  <CSSTransition key={location.key} classNames=\"fade\" timeout={300}>\n                    <Switch location={location}>\n                      <Route exact path=\"/login\" component={Login} />\n                      <Route exact path=\"/chat\" component={Chat} />\n                      <Route render={() => <Redirect to=\"/login\" />} />\n                    </Switch>\n                  </CSSTransition>\n                </TransitionGroup>\n              )}\n            />\n          </Router>\n        </Provider>\n      </Grid>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.scss';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}